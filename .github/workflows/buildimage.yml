name: Build Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '23.05.3'
        type: string
      board:
        description: 'Device board'
        required: true
        default: 'x86'
        type: string
      subtarget:
        description: 'Device subtarget'
        required: true
        default: '64'
        type: string

env:
  DELETE_USELESS_FILES: false

jobs:
  build_image:
    name: build_image ${{ inputs.version }}-${{ inputs.board }}-${{ inputs.subtarget }}
    runs-on: ubuntu-latest

    env:
      CONFBRANCH: 'conf'
      TARGETBRANCH: ${{ inputs.version }}-${{ inputs.board }}-${{ inputs.subtarget }}
      VERSION: ${{ inputs.version }}
      BOARD: ${{ inputs.board }}
      SUBTARGET: ${{ inputs.subtarget }}
      USIGN_ID: ${{ vars.USIGN_ID }}
      USIGN_KEY: ${{ secrets[format('USIGN_{0}', vars.USIGN_ID )] }}

    steps:
      - name: Check if deployed
        shell: bash
        run: |
          rcode=$(curl -sL -w '%{http_code}' -o /dev/null https://github.com/fantastic-packages/rebuild/tree/$TARGETBRANCH)
          echo rcode: $rcode
          [ "$rcode" != "404" ] || { >&2 echo Branch $TARGETBRANCH is not deployed, please build world first.; exit 1; }

      - name: Import keys
        env:
          USIGN_PUBKEY_URL: 'https://github.com/fantastic-packages/packages/raw/master/keys/usign/${{ env.USIGN_ID }}.pub'
        shell: bash
        run: |
          # usign
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "USIGN_PUBKEY<<$EOF" >> $GITHUB_ENV
          curl -sL "$USIGN_PUBKEY_URL" >> $GITHUB_ENV
          echo "$EOF" >> $GITHUB_ENV

      - name: Maximize build space
        if: env.DELETE_USELESS_FILES == 'true' && !cancelled()
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 10240
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Initialize Environment
        shell: bash
        run: |
          sudo apt update
          sudo apt -y install build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
          python3-distutils rsync unzip zlib1g-dev file wget

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TARGETBRANCH }}
